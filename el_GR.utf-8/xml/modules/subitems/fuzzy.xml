<?xml version="1.0" encoding="utf-8"?>
<translations xmlns="http://xaraya.com/2002/ns/translations" locale="el_GR.utf-8">
<entry><string>Update DDSubobjectlink</string><translation></translation></entry>
<entry><string>Create New DDSubobjectlink</string><translation></translation></entry>
<entry><string>Add Link to Subitems</string><translation></translation></entry>
<entry><string>Views Links</string><translation></translation></entry>
<entry><string>Administration - Example</string><translation></translation></entry>
<entry><string>This module allows you to create and display sub-items for any module item. In the words of the author :</string><translation></translation></entry>
<entry><string>&lt;p&gt;For example, if you want to have a pubtype &quot;cooking recipe&quot;. This
pubtype could be to store the ingredients of the meal, thus there would
be required a list of input fields: ingredient1, quantity1,
pic1(extended info :-) ) , ingredient2, quantity2, pic2,...&lt;/p&gt;
&lt;p&gt;The disadvantage of this is the high number of fields to ensure, that
there your users aren't going against the limit. Furthermore there are
always displayed all input fields. And of course it's not a very nice
way to do it.&lt;/p&gt;
&lt;p&gt;As I didn't know how to do this better, I had a dream about a module,
which can be hooked from any other module and which is able to display /
provide editing / etc. for subitems to an item. I had a dream about a
table, which saves the information, which DD-Object stores the subitems
of &quot;module&quot; / &quot;itemtype&quot; combination and another table containing which
DD-Itemids belong to &quot;module&quot; / &quot;itemtype&quot; / &quot;itemid&quot; in this DD-Object
(1 to n Relation). I had the dream to share my module with the community.
Now, the module is here, and all dreams got true. If you didn't get my
technical information, don't worry. &lt;/p&gt;</string><translation></translation></entry>
<entry><string>&lt;ol&gt;
&lt;li&gt; install module&lt;/li&gt;
&lt;li&gt; goto dynamicdata admin area, new object, create a dynamic data object
, which should hold the subitem information (you must have one field
with the ItemID, default 0, display only) -&gt; remember the objectid, edit
label (used for display) and name (used for custom default template)&lt;/li&gt;
&lt;li&gt; goto subitems module, admin area -&gt; add link -&gt; type in objectid (from
previsously created dd-object), module name, itemtype&lt;/li&gt;
&lt;li&gt; goto module modules, hooks -&gt; subitems -&gt; enable the hook for the
module /itemtype combination, you created the link for&lt;/li&gt;
&lt;/ol&gt;
-&gt; now it should work (tested with custom pubtype)</string><translation></translation></entry>
<entry><string>Extended information about this module can be found here. [modules module]</string><translation></translation></entry>
<entry><string>This item does not exists</string><translation></translation></entry>
</translations>
